name: CI

concurrency:
  group: ${{github.workflow}}-${{github.event.pull_request.number || github.sha}}
  cancel-in-progress: true

on:
  push:
    branches-ignore:
      - "dependabot/**"
      - "renovate/**"
  pull_request:
  workflow_dispatch:
  schedule:
    - cron: '0 0 * * 6'

env:
  NPM_CONFIG_AUDIT: "false"
  NPM_CONFIG_FUND: "false"
  DOTNET_CLI_TELEMETRY_OPTOUT: "true"
  NUGET_XMLDOC_MODE: "skip"

jobs:

  lint:
    runs-on: ubuntu-latest

    steps:
    - run: git config --global core.autocrlf true
    - uses: actions/checkout@v3

    - run: curl -L https://github.com/editorconfig-checker/editorconfig-checker/releases/download/2.3.5/ec-linux-amd64.tar.gz  | tar xzf - -C /opt
    - run: /opt/bin/ec-linux-amd64 -v

    - run: npm i eslint
    - run: npm run eslint

  test-js:
    runs-on: ubuntu-latest

    strategy:
      matrix:
        version:
          - '~18.1.0'
          - '~22.2.0'
          - '>=23.1.0'

    steps:
    - uses: actions/checkout@v3

    - run: node build/make-nojquery

    - run: npm i --omit=peer
    - run: npm i --no-save "devextreme@${{ matrix.version }}"
    - name: Instal devextreme-dist
      if: ${{ matrix.version == '>=23.1.0' }}
      run: npm i --no-save "devextreme-dist@${{ matrix.version }}"
    - run: npm run dts
    - run: npm run karma
    - run: npm run karma-bundled
    - run: npm run karma-bundled-nojquery
    - run: npm run karma-bundled-nojquery-cjs

    - uses: codecov/codecov-action@v3
      with:
        files: js-test/coverage/lcov.info

  test-dotnet:
    runs-on: windows-latest

    steps:
    - uses: actions/checkout@v3

    - run: nuget install -Verbosity quiet -ExcludeVersion -OutputDirectory . -Version 2022.2.3 JetBrains.dotCover.CommandLineTools

    - uses: ./.github/actions/dotnet-test-build

    - run: JetBrains.dotCover.CommandLineTools\tools\dotCover cover --ReturnTargetExitCode --ReportType=DetailedXML --Filters="+:module=DevExtreme.AspNet.Data" --Output=coverage_dotnet.xml --TargetExecutable=net\dotnet-test-all.cmd

    - uses: codecov/codecov-action@v3
      with:
        files: coverage_dotnet.xml

  release-packages:
    runs-on: ubuntu-latest

    env:
      RELEASE_KEY_SECRET: ${{ secrets.RELEASE_KEY_SECRET }}

    steps:
    - uses: actions/setup-dotnet@v3
      with:
        dotnet-quality: ga
        dotnet-version: |
          3.1
          6.0

    - uses: actions/checkout@v3

    - if: ${{ env.RELEASE_KEY_SECRET != '' }}
      run: |
        curl -L -o /opt/secure-file.zip https://github.com/appveyor/secure-file/releases/download/1.0.1/secure-file.zip
        unzip /opt/secure-file.zip -d /opt/secure-file
        dotnet /opt/secure-file/secure-file.dll -decrypt net/DevExtreme.AspNet.Data/release.snk.enc -secret ${{ env.RELEASE_KEY_SECRET }}

    - run: node build/make-nojquery
    - run: node build/replace-meta "${{ github.run_number }}" "${{ github.ref }}" "${{ github.repository }}"

    - run: npm pack
    - run: npm pack ./js-nojquery

    - if: ${{ env.RELEASE_KEY_SECRET != '' }}
      run: dotnet pack net/DevExtreme.AspNet.Data --configuration=Release

    - uses: actions/upload-artifact@v3
      with:
        name: release-packages
        path: |
          net/DevExtreme.AspNet.Data/bin/Release/*.nupkg
          devextreme-aspnet-data-*.tgz

  docfx:
    runs-on: windows-latest

    steps:
    - uses: actions/checkout@v3

    - run: dotnet build net/DevExtreme.AspNet.Data
    - run: net\docfx\build.cmd

    - uses: actions/upload-artifact@v3
      with:
        name: docfx-site
        path: net/docfx/build/site
